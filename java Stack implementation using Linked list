//Implement Stack operations using arrays
import java.util.*;
class Node
{
int data;
Node next;
Node(int x)
{
data=x;
next=null;
}
}
class MyStack
{
Node head;
MyStack()
{
head=null;
}
void push(int x)
{
Node n=new Node(x);
if(n==null)
{
System.out.println("Stack is overflow");
return;
}
if(head==null)
{
head=n;
}
else
{
n.next=head;
head=n;
}
}
void pop()
{
if(head==null){
System.out.println("stack is underflow");
return;
}
System.out.println(head.data+"is deleted");
head=head.next;
}
void display()
{
if (head==null)
{
System.out.println("Stack is empty");
return;
}
Node temp;
for(temp=head;temp!=null;temp=temp.next)
{
System.out.print(temp.data+" ");
}
}
}
class Test
{
 public static void main(String args[])
 {
  Scanner s=new Scanner(System.in);
  MyStack s1=new MyStack();
  for(;;)
  {
   System.out.println();
   System.out.println("1.PUSH\n2.POP\n,3.Print\n4.exit");
   System.out.println("Enter your choice");
   int ch=s.nextInt();
   if(ch==1)
   {
    System.out.println("Enter your element");
    int x=s.nextInt();
    s1.push(x);
   }
   else if(ch==2)
   {
     s1.pop();
   }
else if(ch==3)
{
s1.display();
}
else if(ch==4)
{
break;
}
else
{
System.out.println("Invalid choice");
}
}
}
}



